* Compiling programs with GHC

Running GHC invokes the Glasgow Haskell Compiler (GHC), and can be used to compile Haskell
modules and programs into native executables and libraries.

Create a new Haskell source file named the following code in it: 

> main = putStrLn "Hello, World!"

Now, we can compile the program by invoking GHC with the file name:

> -> ghc hello.hs
> [1 of 1] Compiling Main               (hello.hs, hello.o)
> Linking hello ...

GHC created the following files: 

- hello.hi - Haskell interface file
- hello.o - Object file, the output of the compiler before linking
- hello (or hello.exe on Microsoft Windows) - A native runnable executable
* This headline will eat the previous list!!!

GHC will produce an executable when the source file satisfies both conditions:

# Defines the main function in the source file
# Defines the module name to be Main or does not have a module declaration

Otherwise, it will only produce the .o and .hi files.

* Heading level 1
** Heading level 2
*** Heading level 3
**** Heading level 4
***** Heading level 5
****** Heading level 6


- A list 
- At the 
- End of
- The file